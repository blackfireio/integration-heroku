#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

# debug
#set -x

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

source "$(dirname $0)/../../bin/common.sh"

BF_DIR=".blackfire"
BF_BIN_DIR="$BF_DIR/bin"
BF_AGENT_RUN_DIR="$BF_DIR/var/run"
BF_AGENT_SOCKET_FILE="/app/${BF_AGENT_RUN_DIR}/agent.sock"
BF_AGENT_LOG_DIR="$BF_DIR/var/log"
BF_AGENT_CONFIG_FILE="$BF_DIR/etc/agent"
BF_CLIENT_CONFIG_FILE=".blackfire.ini"

BF_BUILD_INSTALL_DIR="$BUILD_DIR/$BF_DIR"
BF_BUILD_BIN_DIR="$BUILD_DIR/$BF_BIN_DIR"
BF_BUILD_AGENT_RUN_DIR="$BUILD_DIR/$BF_AGENT_RUN_DIR"
BF_BUILD_AGENT_CONFIG_FILE="$BUILD_DIR/$BF_AGENT_CONFIG_FILE"
BF_BUILD_CLIENT_CONFIG_FILE="$BUILD_DIR/$BF_CLIENT_CONFIG_FILE"
BF_BUILD_LOG_DIR="$BUILD_DIR/$BF_AGENT_LOG_DIR"
BF_CACHE_DIR="$CACHE_DIR/$BF_DIR"

if [ ! -f "$ENV_DIR/BLACKFIRE_SERVER_ID" ] ; then
  error "BLACKFIRE_SERVER_ID config variable must be defined!"
fi

# Provisioning credentials and settings from config vars.
BLACKFIRE_SERVER_ID=$(cat $ENV_DIR/BLACKFIRE_SERVER_ID)
BLACKFIRE_SERVER_TOKEN=$(cat $ENV_DIR/BLACKFIRE_SERVER_TOKEN)
BLACKFIRE_CLIENT_ID=$(cat $ENV_DIR/BLACKFIRE_CLIENT_ID)
BLACKFIRE_CLIENT_TOKEN=$(cat $ENV_DIR/BLACKFIRE_CLIENT_TOKEN)
BLACKFIRE_LOG_LEVEL="1"
if [ -f "$ENV_DIR/BLACKFIRE_LOG_LEVEL" ] ; then
  BLACKFIRE_LOG_LEVEL=$(cat $ENV_DIR/BLACKFIRE_LOG_LEVEL)
fi
BLACKFIRE_COLLECTOR="https://blackfire.io"
if [ -f "$ENV_DIR/BLACKFIRE_COLLECTOR" ] ; then
  BLACKFIRE_COLLECTOR=$(cat $ENV_DIR/BLACKFIRE_COLLECTOR)
fi
BLACKFIRE_AGENT_SOCKET=unix://${BF_AGENT_SOCKET_FILE}
if [ -f "$ENV_DIR/BLACKFIRE_AGENT_SOCKET" ] ; then
  BLACKFIRE_AGENT_SOCKET=$(cat $ENV_DIR/BLACKFIRE_AGENT_SOCKET)
fi

mkdir -p "$BF_BUILD_INSTALL_DIR" "$BF_BUILD_BIN_DIR" "$BF_BUILD_AGENT_RUN_DIR" "$BF_BUILD_LOG_DIR" "$BF_CACHE_DIR"

# Download the latest available version and get the version as a string.
BF_AGENT_VERSION=$(curl -s -o agent.tar.gz -D - -L https://blackfire.io/api/v1/releases/agent/linux/amd64 | grep 'X-Blackfire-Release-Version: ' | sed "s%X-Blackfire-Release-Version: %%" | sed s%.$%%)

topic "Installing the latest version of Blackfire agent and CLI client"
echo "Version is ${BF_AGENT_VERSION}" | indent
tar -xzf agent.tar.gz
chmod +x agent
cp agent ${BF_BUILD_BIN_DIR}/blackfire-agent
rm agent.tar.gz agent agent.sha1

echo "Installing blackfire CLI client" | indent
curl -A "Heroku" -o ${BF_BUILD_BIN_DIR}/blackfire -s https://packages.blackfire.io/binaries/blackfire-agent/${BF_AGENT_VERSION}/blackfire-cli-linux_amd64
chmod +x ${BF_BUILD_BIN_DIR}/blackfire

# Configure the agent and the client.
topic "Blackfire configuration"
echo "Configuring the agent" | indent
$BF_BUILD_BIN_DIR/blackfire-agent --register \
    --server-id=$BLACKFIRE_SERVER_ID \
    --server-token=$BLACKFIRE_SERVER_TOKEN \
    --config=$BF_BUILD_AGENT_CONFIG_FILE \
    --socket=${BLACKFIRE_AGENT_SOCKET} \
    --log-level=${BLACKFIRE_LOG_LEVEL} \
    --collector=${BLACKFIRE_COLLECTOR}

echo "Configuring the client" | indent
$BF_BUILD_BIN_DIR/blackfire config \
    --client-id=$BLACKFIRE_CLIENT_ID \
    --client-token=$BLACKFIRE_CLIENT_TOKEN \
    --config=$BF_BUILD_CLIENT_CONFIG_FILE

# Provision the startup profile script.
topic "Writing profile script"
mkdir -p $BUILD_DIR/.profile.d

cat <<EOF > ${BUILD_DIR}/.profile.d/blackfire-agent.sh
export PATH="/app/${BF_BIN_DIR}:$PATH"
export BLACKFIRE_LOG_FILE="/app/${BF_AGENT_LOG_DIR}/probe.log"
export BLACKFIRE_LOG_LEVEL=\${BLACKFIRE_LOG_LEVEL:-"1"}
export BLACKFIRE_COLLECTOR=\${BLACKFIRE_COLLECTOR:-"https://blackfire.io"}
export BLACKFIRE_ENDPOINT=\${BLACKFIRE_ENDPOINT:-"https://blackfire.io"}
export BLACKFIRE_AGENT_SOCKET="${BLACKFIRE_AGENT_SOCKET}"

if [ ! -S ${BF_AGENT_SOCKET_FILE} ] ; then
  blackfire-agent \
      --config=/app/${BF_AGENT_CONFIG_FILE} \
      --log-file="/app/${BF_AGENT_LOG_DIR}/agent.log" &
fi
EOF

topic "Blackfire agent and CLI tool are now installed."
${BF_BUILD_BIN_DIR}/blackfire-agent -v | indent
${BF_BUILD_BIN_DIR}/blackfire version | indent
