#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

# debug
#set -x

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2

BF_DIR=".blackfire"
BF_BIN_DIR="$BF_DIR/bin"
BF_AGENT_RUN_DIR="$BF_DIR/var/run"
BF_AGENT_LOG_DIR="$BF_DIR/var/log"

BF_BUILD_INSTALL_DIR="$BUILD_DIR/$BF_DIR"
BF_BUILD_BIN_DIR="$BUILD_DIR/$BF_BIN_DIR"
BF_BUILD_AGENT_RUN_DIR="$BUILD_DIR/$BF_AGENT_RUN_DIR"
BF_BUILD_LOG_DIR="$BUILD_DIR/$BF_AGENT_LOG_DIR"
BF_CACHE_DIR="$CACHE_DIR/$BF_DIR"

function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

mkdir -p "$BF_BUILD_INSTALL_DIR" "$BF_BUILD_BIN_DIR" "$BF_BUILD_AGENT_RUN_DIR" "$BF_BUILD_LOG_DIR" "$BF_CACHE_DIR"
# Ensure we store the STACK in the cache for next time.
echo "$STACK" > "$BF_CACHE_DIR/STACK"

if [ -f "$BF_CACHE_DIR/AGENT_VERSION" ] ; then
  BF_AGENT_INSTALLED_VERSION=$(cat "$BF_CACHE_DIR/AGENT_VERSION")
else
  BF_AGENT_INSTALLED_VERSION="0.1"
fi

# Get the latest available version and compare it with the current installed one.
BF_AGENT_VERSION=$(curl -s -I https://blackfire.io/api/v1/releases/agent/linux/amd64 | grep 'X-Blackfire-Release-Version: ' | sed "s%X-Blackfire-Release-Version: %%" | sed s%.$%%)

if [[ "$BF_AGENT_INSTALLED_VERSION" == "$BF_AGENT_VERSION" ]] ; then
  topic "Blackfire agent is already up-to-date"
else
  topic "Installing the latest version (${BF_AGENT_VERSION}) of Blackfire agent"
  curl -A "Heroku" -o agent.tar.gz -L -s https://blackfire.io/api/v1/releases/agent/linux/amd64
  tar -xzf agent.tar.gz
  chmod +x agent
  cp agent ${BF_BUILD_BIN_DIR}/blackfire-agent
  rm agent.tar.gz agent agent.sha1

  topic "Installing blackfire CLI tool"
  curl -A "Heroku" -o ${BF_BUILD_BIN_DIR}/blackfire -s https://packages.blackfire.io/binaries/blackfire-agent/${BF_AGENT_VERSION}/blackfire-cli-linux_amd64
  chmod +x ${BF_BUILD_BIN_DIR}/blackfire
fi

topic "Writing profile script"
mkdir -p $BUILD_DIR/.profile.d
cat <<EOF > ${BUILD_DIR}/.profile.d/000-blackfire-agent.sh
export PATH="/app/${BF_BIN_DIR}:$PATH"
export BLACKFIRE_LOG_FILE="/app/${BF_AGENT_LOG_DIR}/blackfire-agent.log"
export BLACKFIRE_SOCKET="unix:///app/${BF_AGENT_RUN_DIR}/agent.sock"
export BLACKFIRE_CONFIG="/dev/null"

touch ${BLACKFIRE_SOCKET}
blackfire-agent &
EOF

topic "Blackfire agent and CLI tool are now installed."
${BF_BUILD_BIN_DIR}/blackfire-agent -v | indent
${BF_BUILD_BIN_DIR}/blackfire version | indent
